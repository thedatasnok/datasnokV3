name: Deploy to production

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'yarn'

      - name: Install Node dependencies
        run: yarn
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Registry
        uses: docker/login-action@v1.12.0
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Web image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.web
          push: true
          tags: datasnok/datasnok:web
          cache-from: type=registry,ref=datasnok/datasnok:web-buildcache
          cache-to: type=registry,ref=datasnok/datasnok:web-buildcache,mode=max

      - name: Set up kubectl
        uses: azure/setup-kubectl@v2.0

      - name: Set k8s context
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Set image pull secrets
        uses: azure/k8s-create-secret@v2
        with:
          namespace: 'datasnokv3'
          container-registry-url: https://index.docker.io/v1/
          container-registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          container-registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          container-registry-email: ${{ secrets.DOCKERHUB_EMAIL }}
          secret-name: 'datasnok-imagepullsecret'

      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      
      - name: Install Pulumi Kubernetes plugin
        run: pulumi plugin install resource kubernetes v3.13.0

      - name: Run pulumi
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: prod
          work-dir: apps/infrastructure
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}